<?php
// Script de correction pour les probl√®mes d'affichage des photos de profil

require __DIR__.'/vendor/autoload.php';

use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Log;
use Illuminate\Foundation\Application;

$app = require_once __DIR__.'/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

echo "Script de correction d'affichage des photos de profil\n";
echo "==================================================\n\n";

// V√©rifier si le lien symbolique existe
if (!file_exists(public_path('storage'))) {
    echo "‚ö†Ô∏è Le lien symbolique storage n'existe pas, cr√©ation en cours...\n";
    try {
        \Artisan::call('storage:link');
        echo "‚úÖ Lien symbolique storage:link cr√©√©\n";
    } catch (Exception $e) {
        echo "‚ùå Erreur lors de la cr√©ation du lien symbolique: " . $e->getMessage() . "\n";
    }
} else {
    echo "‚úì Le lien symbolique storage existe\n";
}

// Cr√©er le lien manuellement si n√©cessaire
$publicStoragePath = public_path('storage');
if (!file_exists($publicStoragePath)) {
    echo "‚ö†Ô∏è Tentative de cr√©ation manuelle du lien symbolique...\n";
    $target = storage_path('app/public');
    
    try {
        if (symlink($target, $publicStoragePath)) {
            echo "‚úÖ Lien symbolique cr√©√© manuellement\n";
        } else {
            echo "‚ùå √âchec de la cr√©ation manuelle du lien symbolique\n";
        }
    } catch (Exception $e) {
        echo "‚ùå Exception lors de la cr√©ation manuelle: " . $e->getMessage() . "\n";
    }
}

// V√©rifier le r√©pertoire de stockage sans modifier les permissions
$photoDir = storage_path('app/public/profile-photos');
if (!file_exists($photoDir)) {
    try {
        mkdir($photoDir, 0755, true);
        echo "‚úÖ R√©pertoire profile-photos cr√©√©: $photoDir\n";
    } catch (Exception $e) {
        echo "‚ùå Erreur lors de la cr√©ation du r√©pertoire: " . $e->getMessage() . "\n";
    }
} else {
    echo "‚úì Le r√©pertoire profile-photos existe\n";
}

// R√©cup√©rer tous les utilisateurs avec une photo de profil
echo "\nRecherche des utilisateurs avec photos de profil...\n";
$usersWithPhotos = \App\Models\User::whereNotNull('profile_photo_path')->get();
echo "Trouv√© " . count($usersWithPhotos) . " utilisateurs avec photos\n\n";

$fixed = 0;

foreach ($usersWithPhotos as $user) {
    echo "Traitement de la photo de l'utilisateur #{$user->id} - {$user->name}:\n";
    
    // V√©rifier et corriger le chemin de la photo si n√©cessaire
    $photoPath = $user->profile_photo_path;
    $correctedPath = $photoPath;
    
    // Enlever "public/" si pr√©sent
    if (strpos($photoPath, 'public/') === 0) {
        $correctedPath = str_replace('public/', '', $photoPath);
        echo "  ‚ö†Ô∏è Correction du chemin (suppression de 'public/'): {$correctedPath}\n";
    }
    
    // S'assurer que le chemin commence par "profile-photos/"
    if (strpos($correctedPath, 'profile-photos/') !== 0) {
        $correctedPath = 'profile-photos/' . basename($correctedPath);
        echo "  ‚ö†Ô∏è Correction du chemin (ajout du pr√©fixe 'profile-photos/'): {$correctedPath}\n";
    }
    
    // Mettre √† jour si le chemin a √©t√© corrig√©
    if ($correctedPath !== $photoPath) {
        $user->profile_photo_path = $correctedPath;
        try {
            $user->save();
            echo "  ‚úÖ Chemin de photo mis √† jour dans la base de donn√©es\n";
            $fixed++;
        } catch (Exception $e) {
            echo "  ‚ùå Erreur lors de la mise √† jour: " . $e->getMessage() . "\n";
        }
    }
    
    // V√©rifier si le fichier existe physiquement
    $fullPath = storage_path('app/public/' . $correctedPath);
    echo "  üìÇ Chemin complet: {$fullPath}\n";
    
    if (file_exists($fullPath)) {
        echo "  ‚úÖ Fichier existant\n";
        // Ne pas essayer de modifier les permissions, juste v√©rifier si le fichier est lisible
        if (is_readable($fullPath)) {
            echo "  ‚úì Le fichier est lisible\n";
        } else {
            echo "  ‚ö†Ô∏è Le fichier existe mais n'est pas lisible\n";
        }
    } else {
        echo "  ‚ùå ERREUR: Fichier introuvable\n";
    }
    
    // Tester si le fichier est accessible via l'URL
    $url = Storage::url($correctedPath);
    echo "  üîó URL d'acc√®s: {$url}\n";
    
    echo "\n";
}

echo "\n======== R√âSUM√â ========\n";
echo "Utilisateurs trait√©s: " . count($usersWithPhotos) . "\n";
echo "Chemins corrig√©s: " . $fixed . "\n";
echo "========================\n";

echo "\nV√©rification termin√©e. Si des photos ne s'affichent toujours pas:\n";
echo "1. V√©rifiez que le lien symbolique 'public/storage' pointe vers 'storage/app/public'\n";
echo "2. Assurez-vous que les permissions permettent au serveur web de lire les fichiers\n";
echo "3. V√©rifiez la configuration de la fa√ßade Storage dans config/filesystems.php\n"; 